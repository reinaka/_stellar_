{"ast":null,"code":"import { rootReducer } from './reducers/root-reducer';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { socketMiddleware } from './middleware/socketMiddleware';\nimport { socketActions } from './actions/socket-actions';\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  }).concat(socketMiddleware(socketActions)),\n  devTools: process.env.NODE_ENV !== 'production'\n});","map":{"version":3,"names":["rootReducer","configureStore","socketMiddleware","socketActions","store","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","devTools","process","env","NODE_ENV"],"sources":["/Users/reinaka/Documents/untitled folder/_stellar_/src/services/store.ts"],"sourcesContent":["import { rootReducer } from './reducers/root-reducer';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { socketMiddleware } from './middleware/socketMiddleware';\nimport { socketActions } from './actions/socket-actions';\n\nexport const store = configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n        serializableCheck: false\n    }).concat(socketMiddleware(socketActions)),\n    devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport type TStore = ReturnType<typeof store.getState>;\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,yBAAyB;AACrD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,gBAAgB,QAAQ,+BAA+B;AAChE,SAASC,aAAa,QAAQ,0BAA0B;AAExD,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAChCI,OAAO,EAAEL,WAAW;EACpBM,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC;IACvDC,iBAAiB,EAAE;EACvB,CAAC,CAAC,CAACC,MAAM,CAACP,gBAAgB,CAACC,aAAa,CAAC,CAAC;EAC1CO,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACvC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}