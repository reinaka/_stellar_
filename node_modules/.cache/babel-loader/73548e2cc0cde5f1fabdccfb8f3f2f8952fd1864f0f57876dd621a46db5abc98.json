{"ast":null,"code":"var _jsxFileName = \"/Users/reinaka/Documents/untitled folder/_stellar_/react-burger/src/components/modal/order-detailed-info/order-detailed-info.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useAppSelector } from \"../../../services/hooks/reduxTypes\";\nimport { selectCurrentOrder, selectOrders } from \"../../../services/functions/selectorFunctions\";\nimport { OrderStatus } from \"../../ui-elements/order-status/order-status\";\nimport { FormattedDate } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { Price } from \"../../ui-elements/price/price\";\nimport { selectAllIngredientsItems } from \"../../../services/functions/selectorFunctions\";\nimport { OrderIngredientsBlock } from \"../../ui-elements/order-ingredients-block/order-ingredients-block.module.css/order-ingredients-block\";\nimport styles from './order-detailed-info.module.css';\nimport { Spinner } from \"../../ui-elements/spinner/spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderDetailedInfo = () => {\n  _s();\n  const params = useParams();\n  const selectedOrder = useAppSelector(selectCurrentOrder);\n  const allOrders = useAppSelector(selectOrders);\n  const storeIngredients = useAppSelector(selectAllIngredientsItems);\n  if (allOrders) allOrders.filter(item => item._id === params.orderId);\n  const orderData = selectedOrder ? selectedOrder : allOrders[0];\n  const date = orderData.updatedAt;\n\n  //расчет общей стоимости заказа\n  let sum = 0;\n  orderData.ingredients.forEach(item => storeIngredients.forEach(ingredient => {\n    if (ingredient._id === item) sum += ingredient.price;\n  }));\n\n  //группировка ингредиентов с подсчетом количества одинаковых элементов\n\n  const groupedIngredients = orderData.ingredients.reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n  const groupedIngredientsKeys = Object.keys(groupedIngredients) || [];\n  if (!orderData) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: `text text_type_digits-default ${styles.num} mb-10`,\n      children: [\"#\", orderData.number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text text_type_main-medium mb-3\",\n      children: orderData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(OrderStatus, {\n      status: `${orderData.status}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text text_type_main-medium mb-6 mt-15\",\n      children: \"\\u0421\\u043E\\u0441\\u0442\\u0430\\u0432:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `${styles.list} mb-16`,\n      children: groupedIngredients && groupedIngredientsKeys.map(ingredient => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(OrderIngredientsBlock, {\n          itemID: ingredient,\n          quantity: groupedIngredients[ingredient]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)\n      }, ingredient, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.dateAndTotalPrice}`,\n      children: [/*#__PURE__*/_jsxDEV(FormattedDate, {\n        className: \"text text_type_main-small text_color_inactive\",\n        date: new Date(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Price, {\n        price: sum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n};\n_s(OrderDetailedInfo, \"bWwkYB0cZWAXpO0rnYUcVwvp5ck=\", false, function () {\n  return [useParams, useAppSelector, useAppSelector, useAppSelector];\n});\n_c = OrderDetailedInfo;\nvar _c;\n$RefreshReg$(_c, \"OrderDetailedInfo\");","map":{"version":3,"names":["useParams","useAppSelector","selectCurrentOrder","selectOrders","OrderStatus","FormattedDate","Price","selectAllIngredientsItems","OrderIngredientsBlock","styles","Spinner","jsxDEV","_jsxDEV","OrderDetailedInfo","_s","params","selectedOrder","allOrders","storeIngredients","filter","item","_id","orderId","orderData","date","updatedAt","sum","ingredients","forEach","ingredient","price","groupedIngredients","reduce","acc","groupedIngredientsKeys","Object","keys","fileName","_jsxFileName","lineNumber","columnNumber","children","className","num","number","name","status","list","map","itemID","quantity","dateAndTotalPrice","Date","_c","$RefreshReg$"],"sources":["/Users/reinaka/Documents/untitled folder/_stellar_/react-burger/src/components/modal/order-detailed-info/order-detailed-info.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useAppSelector } from \"../../../services/hooks/reduxTypes\";\nimport { selectCurrentOrder, selectOrders } from \"../../../services/functions/selectorFunctions\";\nimport { OrderStatus } from \"../../ui-elements/order-status/order-status\";\nimport { FormattedDate } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { Price } from \"../../ui-elements/price/price\";\nimport { TIngredient } from \"../../../services/types/types\";\nimport { selectAllIngredientsItems } from \"../../../services/functions/selectorFunctions\";\nimport { OrderIngredientsBlock } from \"../../ui-elements/order-ingredients-block/order-ingredients-block.module.css/order-ingredients-block\";\nimport styles from './order-detailed-info.module.css';\nimport { Spinner } from \"../../ui-elements/spinner/spinner\";\n\nexport const OrderDetailedInfo = () => {\n    const params = useParams();\n    const selectedOrder = useAppSelector(selectCurrentOrder);\n    const allOrders = useAppSelector(selectOrders);\n    const storeIngredients : TIngredient[] = useAppSelector(selectAllIngredientsItems);\n    if(allOrders) allOrders.filter(item => item._id === params.orderId);\n    const orderData = selectedOrder \n                        ? selectedOrder \n                        : allOrders[0]\n\n        const date = orderData.updatedAt;\n    \n        //расчет общей стоимости заказа\n        let sum = 0;\n        orderData.ingredients.forEach((item : string) => storeIngredients.forEach(ingredient => {\n            if(ingredient._id === item) sum += ingredient.price;\n        }));\n\n        //группировка ингредиентов с подсчетом количества одинаковых элементов\n        type TGroupedIngredients = {\n            [key: string]: number\n        }\n        const groupedIngredients = orderData.ingredients.reduce((acc : TGroupedIngredients, item : string) => {\n            acc[item] = (acc[item] || 0) + 1;\n            return acc;\n        }, {});\n        const groupedIngredientsKeys : string[] | [] = Object.keys(groupedIngredients) || [];\n\n        if(!orderData) return <Spinner />;\n        return (\n            <div>\n                <p className={`text text_type_digits-default ${styles.num} mb-10`}>#{orderData.number}</p>\n                <h2 className=\"text text_type_main-medium mb-3\">{orderData.name}</h2>\n                <OrderStatus status={`${orderData.status}`}/>\n                <p className=\"text text_type_main-medium mb-6 mt-15\">Состав:</p>\n                <ul className={`${styles.list} mb-16`}>\n                    {groupedIngredients && groupedIngredientsKeys.map(ingredient => (\n                        <li key={ingredient}>\n                            <OrderIngredientsBlock itemID={ingredient} quantity={groupedIngredients[ingredient]}/>\n                        </li>\n                    ))\n                    }\n                </ul>\n                <div className={`${styles.dateAndTotalPrice}`}>\n                    <FormattedDate className=\"text text_type_main-small text_color_inactive\" date={new Date(date)} />\n                    <Price price={sum}/>\n                </div>\n            </div>\n        )\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}