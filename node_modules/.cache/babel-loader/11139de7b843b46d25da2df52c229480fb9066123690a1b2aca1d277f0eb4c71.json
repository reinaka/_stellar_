{"ast":null,"code":"var _jsxFileName = \"/Users/reinaka/Documents/untitled folder/_stellar_/react-burger/src/pages/reset-password-page/reset-password-page.tsx\",\n  _s = $RefreshSig$();\nimport { PasswordInput, Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { RegistrationWrapper } from '../../components/ui-elements/form-registration-wrapper/form-registration-wrapper';\nimport { useState, useCallback, useEffect } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { selectLoginSuccess } from '../../services/functions/selectorFunctions';\nimport { resetPassword } from '../../services/actions/auth-actions';\nimport ErrorModal from '../../components/modal/error-modal/error-modal';\nimport { useModal } from '../../services/hooks/use-modal';\nimport { selectAuthError } from '../../services/functions/selectorFunctions';\nimport { RESET_PASSWORD_ENDPOINT, BASE_URL } from '../../constants/constants';\nimport { useLocation } from 'react-router-dom';\nimport RegistrationForm from '../../components/ui-elements/form-registration/form-registration';\nimport RegisterFormText from '../../components/ui-elements/register-form-text/register-form-text';\nimport { useFormAndValidation } from '../../services/hooks/use-form-validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ResetPasswordPage() {\n  _s();\n  var _location$state;\n  const loggedIn = useSelector(selectLoginSuccess);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const authError = useSelector(selectAuthError);\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) || '/';\n  const [code, setCode] = useState('');\n  const handleName = e => {\n    setCode(e.target.value);\n  };\n  const {\n    values,\n    handleChange\n  } = useFormAndValidation({\n    password: \"\"\n  });\n  const handleResetPassword = useCallback(() => {\n    const dataToPost = {\n      password: values.password,\n      token: code\n    };\n    dispatch(resetPassword(navigate, dataToPost));\n  }, [dispatch, code, navigate, values.password]);\n  const [errorText, setErrorText] = useState();\n  const [isModalVisible, openModal, closeModal] = useModal();\n  useEffect(() => {\n    if (authError) {\n      if (authError === \"Incorrect reset token\") {\n        setErrorText(\"Неверный код восстановления\");\n        openModal();\n      }\n    }\n  }, [authError, openModal]);\n  return loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: from,\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(RegistrationWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(RegistrationForm, {\n        title: \"\\u0412\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F\",\n        buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n        onSubmit: e => {\n          e.preventDefault();\n          handleResetPassword();\n        },\n        action: `${BASE_URL}${RESET_PASSWORD_ENDPOINT}`,\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(PasswordInput, {\n          extraClass: \"mb-6\",\n          value: (values === null || values === void 0 ? void 0 : values.password) || \"\",\n          name: \"password\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          extraClass: \"mb-6\",\n          value: code,\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0434 \\u0438\\u0437 \\u043F\\u0438\\u0441\\u044C\\u043C\\u0430\",\n          name: 'name',\n          onChange: e => handleName(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          extraClass: \"mb-20 mt-6\",\n          htmlType: \"submit\",\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RegisterFormText, {\n        linkText: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n        linkAddress: \"/login\",\n        children: \"\\u0412\\u0441\\u043F\\u043E\\u043C\\u043D\\u0438\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), authError && isModalVisible && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      message: errorText,\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true);\n}\n_s(ResetPasswordPage, \"aIn5yEyQhrQ2YtciqfDJCD5CmNE=\", true, function () {\n  return [useNavigate, useLocation, useFormAndValidation, useModal];\n});\n_c = ResetPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["PasswordInput","Input","Button","RegistrationWrapper","useState","useCallback","useEffect","Navigate","useNavigate","selectLoginSuccess","resetPassword","ErrorModal","useModal","selectAuthError","RESET_PASSWORD_ENDPOINT","BASE_URL","useLocation","RegistrationForm","RegisterFormText","useFormAndValidation","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPasswordPage","_s","_location$state","loggedIn","useSelector","navigate","dispatch","useDispatch","location","authError","from","state","code","setCode","handleName","e","target","value","values","handleChange","password","handleResetPassword","dataToPost","token","errorText","setErrorText","isModalVisible","openModal","closeModal","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","children","title","buttonText","onSubmit","preventDefault","action","method","extraClass","name","placeholder","onChange","htmlType","linkText","linkAddress","message","_c","$RefreshReg$"],"sources":["/Users/reinaka/Documents/untitled folder/_stellar_/react-burger/src/pages/reset-password-page/reset-password-page.tsx"],"sourcesContent":["import { PasswordInput, Input, Button } from '@ya.praktikum/react-developer-burger-ui-components' ;\nimport { RegistrationWrapper } from '../../components/ui-elements/form-registration-wrapper/form-registration-wrapper';\nimport { useState, useCallback, useEffect, ChangeEvent } from 'react';\nimport { useAppSelector, } from '../../services/hooks/reduxTypes';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { selectLoginSuccess } from '../../services/functions/selectorFunctions';\nimport { resetPassword } from '../../services/actions/auth-actions';\nimport ErrorModal from '../../components/modal/error-modal/error-modal';\nimport { useModal } from '../../services/hooks/use-modal';\nimport { selectAuthError } from '../../services/functions/selectorFunctions';\nimport { RESET_PASSWORD_ENDPOINT, BASE_URL } from '../../constants/constants';\nimport { useLocation } from 'react-router-dom';\nimport RegistrationForm from '../../components/ui-elements/form-registration/form-registration';\nimport RegisterFormText from '../../components/ui-elements/register-form-text/register-form-text';\nimport { useFormAndValidation } from '../../services/hooks/use-form-validation';\n\ntype FormStateType = {\n    password : string,\n};\n\n\nexport function ResetPasswordPage () {\n    const loggedIn = useSelector(selectLoginSuccess);\n    const navigate = useNavigate();\n    const dispatch = useDispatch() as any;\n    const location = useLocation();\n    const authError = useSelector(selectAuthError);\n    const from = location.state?.from || '/';\n\n    const [code, setCode] = useState('');\n    const handleName = (e: ChangeEvent<HTMLInputElement>) => {\n        setCode(e.target.value)\n    }\n\n    const {values, handleChange} = useFormAndValidation<FormStateType>({password : \"\"});\n\n    const handleResetPassword = useCallback(() => {\n        const dataToPost = {\n            password: values.password,\n            token: code\n        }\n        dispatch(resetPassword(navigate, dataToPost));\n    }, [dispatch, code, navigate, values.password]);\n\n    const [errorText, setErrorText] = useState<string>();\n    const [isModalVisible, openModal, closeModal] = useModal();\n\n    useEffect(() => {\n        if(authError) {\n            if(authError === \"Incorrect reset token\") {\n                setErrorText(\"Неверный код восстановления\");\n                openModal();\n            }\n        }\n    }, [authError, openModal])\n\n    return loggedIn\n    ? <Navigate to={from} replace={true} />\n    : (\n        <>\n        <RegistrationWrapper>\n            <RegistrationForm \n                title=\"Восстановление пароля\" \n                buttonText=\"Сохранить\"\n                onSubmit={(e) => {e.preventDefault(); handleResetPassword()}}\n                action={`${BASE_URL}${RESET_PASSWORD_ENDPOINT}`}\n                method=\"POST\"\n            >\n                <PasswordInput \n                    extraClass=\"mb-6\" \n                    value={values?.password || \"\"} \n                    name=\"password\" \n                    placeholder=\"Введите новый пароль\" \n                    onChange={(e) => handleChange(e)}\n                />\n                <Input \n                    extraClass=\"mb-6\" \n                    value={code} \n                    placeholder=\"Введите код из письма\" \n                    name={'name'} \n                    onChange={(e) => handleName(e)}\n                />\n                <Button extraClass=\"mb-20 mt-6\" htmlType=\"submit\">Сохранить</Button>\n            </RegistrationForm>\n            <RegisterFormText linkText=\"Войти\" linkAddress=\"/login\">Вспомнили пароль?</RegisterFormText>\n        </RegistrationWrapper>\n        {authError && isModalVisible && <ErrorModal message={errorText} closeModal={closeModal}/>}\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}