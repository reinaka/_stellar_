{"ast":null,"code":"var _jsxFileName = \"/Users/reinaka/Documents/untitled folder/_stellar_/react-burger/src/pages/forgot-password-page/forgot-password-page.tsx\",\n  _s = $RefreshSig$();\nimport { EmailInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { RegistrationWrapper } from '../../components/ui-elements/form-registration-wrapper/form-registration-wrapper';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { FORGOT_PASSWORD_ENDPOINT, BASE_URL } from '../../constants/constants';\nimport { forgotPassword } from '../../services/actions/auth-actions';\nimport RegistrationForm from '../../components/ui-elements/form-registration/form-registration';\nimport RegisterFormText from '../../components/ui-elements/register-form-text/register-form-text';\nimport { useFormAndValidation } from '../../services/hooks/use-form-validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ForgotPasswordPage() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const {\n    values,\n    handleChange\n  } = useFormAndValidation({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const handleResetPassword = () => {\n    const dataToPost = values.email;\n    dispatch(forgotPassword(navigate, location, dataToPost));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RegistrationWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(RegistrationForm, {\n        action: `${BASE_URL}${FORGOT_PASSWORD_ENDPOINT}`,\n        method: \"POST\",\n        title: \"\\u0412\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F\",\n        buttonText: \"\\u0412\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\",\n        onSubmit: e => {\n          e.preventDefault();\n          handleResetPassword();\n        },\n        children: [/*#__PURE__*/_jsxDEV(EmailInput, {\n          extraClass: \"mb-6\",\n          value: (values === null || values === void 0 ? void 0 : values.email) || \"\",\n          name: 'email',\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          extraClass: \"mb-20 mt-6\",\n          htmlType: \"submit\",\n          children: \"\\u0412\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RegisterFormText, {\n        linkText: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n        linkAddress: \"/login\",\n        children: \"\\u0412\\u0441\\u043F\\u043E\\u043C\\u043D\\u0438\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(ForgotPasswordPage, \"+fKW7OVokEwLDvoz2pK/2HeZopw=\", true, function () {\n  return [useNavigate, useLocation, useFormAndValidation];\n});\n_c = ForgotPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"names":["EmailInput","Button","RegistrationWrapper","useNavigate","useLocation","FORGOT_PASSWORD_ENDPOINT","BASE_URL","forgotPassword","RegistrationForm","RegisterFormText","useFormAndValidation","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgotPasswordPage","_s","navigate","location","dispatch","useDispatch","values","handleChange","name","email","password","handleResetPassword","dataToPost","children","action","method","title","buttonText","onSubmit","e","preventDefault","extraClass","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlType","linkText","linkAddress","_c","$RefreshReg$"],"sources":["/Users/reinaka/Documents/untitled folder/_stellar_/react-burger/src/pages/forgot-password-page/forgot-password-page.tsx"],"sourcesContent":["import { EmailInput, Button } from '@ya.praktikum/react-developer-burger-ui-components' ;\nimport { RegistrationWrapper } from '../../components/ui-elements/form-registration-wrapper/form-registration-wrapper';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { FORGOT_PASSWORD_ENDPOINT, BASE_URL } from '../../constants/constants';\nimport { useAppDispatch } from '../../services/hooks/reduxTypes';\nimport { forgotPassword } from '../../services/actions/auth-actions';\nimport RegistrationForm from '../../components/ui-elements/form-registration/form-registration';\nimport RegisterFormText from '../../components/ui-elements/register-form-text/register-form-text';\nimport { useFormAndValidation } from '../../services/hooks/use-form-validation';\n\ntype FormStateType = {\n    name : string,\n    email : string,\n    password : string,\n};\n\nexport function ForgotPasswordPage () {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const dispatch = useDispatch() as any;\n\n    const {values, handleChange} = useFormAndValidation<FormStateType>({\n        name : \"\",\n        email : \"\",\n        password : \"\",\n    });\n\n    const handleResetPassword = () => {\n        const dataToPost = values.email;\n        dispatch(forgotPassword(navigate, location, dataToPost))\n    }   \n\n    return (<>\n        <RegistrationWrapper>\n            <RegistrationForm \n                action={`${BASE_URL}${FORGOT_PASSWORD_ENDPOINT}`}\n                method='POST'\n                title=\"Восстановление пароля\" \n                buttonText=\"Восстановить\" \n                onSubmit={(e) => {e.preventDefault();handleResetPassword()}}\n            >\n            <EmailInput \n                extraClass=\"mb-6\" \n                value={values?.email || \"\"} \n                name={'email'} \n                onChange={e => handleChange(e)}/>\n            <Button extraClass=\"mb-20 mt-6\" htmlType=\"submit\">Восстановить</Button>\n            </RegistrationForm>\n            <RegisterFormText linkText=\"Войти\" linkAddress=\"/login\">Вспомнили пароль?</RegisterFormText>\n        </RegistrationWrapper>\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,MAAM,QAAQ,oDAAoD;AACvF,SAASC,mBAAmB,QAAQ,kFAAkF;AACtH,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,wBAAwB,EAAEC,QAAQ,QAAQ,2BAA2B;AAE9E,SAASC,cAAc,QAAQ,qCAAqC;AACpE,OAAOC,gBAAgB,MAAM,kEAAkE;AAC/F,OAAOC,gBAAgB,MAAM,oEAAoE;AACjG,SAASC,oBAAoB,QAAQ,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAQhF,OAAO,SAASC,kBAAkBA,CAAA,EAAI;EAAAC,EAAA;EAClC,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,QAAQ,GAAGC,WAAW,CAAC,CAAQ;EAErC,MAAM;IAACC,MAAM;IAAEC;EAAY,CAAC,GAAGZ,oBAAoB,CAAgB;IAC/Da,IAAI,EAAG,EAAE;IACTC,KAAK,EAAG,EAAE;IACVC,QAAQ,EAAG;EACf,CAAC,CAAC;EAEF,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,UAAU,GAAGN,MAAM,CAACG,KAAK;IAC/BL,QAAQ,CAACZ,cAAc,CAACU,QAAQ,EAAEC,QAAQ,EAAES,UAAU,CAAC,CAAC;EAC5D,CAAC;EAED,oBAAQf,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACJhB,OAAA,CAACV,mBAAmB;MAAA0B,QAAA,gBAChBhB,OAAA,CAACJ,gBAAgB;QACbqB,MAAM,EAAG,GAAEvB,QAAS,GAAED,wBAAyB,EAAE;QACjDyB,MAAM,EAAC,MAAM;QACbC,KAAK,EAAC,2HAAuB;QAC7BC,UAAU,EAAC,0EAAc;QACzBC,QAAQ,EAAGC,CAAC,IAAK;UAACA,CAAC,CAACC,cAAc,CAAC,CAAC;UAACT,mBAAmB,CAAC,CAAC;QAAA,CAAE;QAAAE,QAAA,gBAEhEhB,OAAA,CAACZ,UAAU;UACPoC,UAAU,EAAC,MAAM;UACjBC,KAAK,EAAE,CAAAhB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,KAAK,KAAI,EAAG;UAC3BD,IAAI,EAAE,OAAQ;UACde,QAAQ,EAAEJ,CAAC,IAAIZ,YAAY,CAACY,CAAC;QAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACrC9B,OAAA,CAACX,MAAM;UAACmC,UAAU,EAAC,YAAY;UAACO,QAAQ,EAAC,QAAQ;UAAAf,QAAA,EAAC;QAAY;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACnB9B,OAAA,CAACH,gBAAgB;QAACmC,QAAQ,EAAC,gCAAO;QAACC,WAAW,EAAC,QAAQ;QAAAjB,QAAA,EAAC;MAAiB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E;EAAC,gBACpB,CAAC;AAEX;AAAC1B,EAAA,CApCeD,kBAAkB;EAAA,QACbZ,WAAW,EACXC,WAAW,EAGGM,oBAAoB;AAAA;AAAAoC,EAAA,GALvC/B,kBAAkB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}