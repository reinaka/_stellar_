{"ast":null,"code":"import { rootReducer } from './reducers/root-reducer';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { socketMiddleware } from './middleware/socketMiddleware';\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  }).concat(socketMiddleware(action)),\n  devTools: process.env.NODE_ENV !== 'production'\n});","map":{"version":3,"names":["rootReducer","configureStore","socketMiddleware","store","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","action","devTools","process","env","NODE_ENV"],"sources":["/Users/reinaka/Documents/untitled folder/_stellar_/react-burger/src/services/store.ts"],"sourcesContent":["import { rootReducer } from './reducers/root-reducer';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { socketMiddleware } from './middleware/socketMiddleware';\nimport { TSocketActions } from './actions/socket-actions';\n\nexport const store = configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n        serializableCheck: false\n    }).concat(socketMiddleware(action)),\n    devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport type TStore = ReturnType<typeof store.getState>;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,yBAAyB;AACrD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,gBAAgB,QAAQ,+BAA+B;AAGhE,OAAO,MAAMC,KAAK,GAAGF,cAAc,CAAC;EAChCG,OAAO,EAAEJ,WAAW;EACpBK,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC;IACvDC,iBAAiB,EAAE;EACvB,CAAC,CAAC,CAACC,MAAM,CAACN,gBAAgB,CAACO,MAAM,CAAC,CAAC;EACnCC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACvC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}