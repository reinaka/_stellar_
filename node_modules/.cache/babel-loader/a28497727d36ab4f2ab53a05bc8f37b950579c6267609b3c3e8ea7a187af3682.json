{"ast":null,"code":"var _jsxFileName = \"/Users/reinaka/Documents/untitled folder/_stellar_/react-burger/src/components/modal/order-detailed-info/order-detailed-info.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderDetailedInfo = () => {\n  // const params = useParams();\n  // const selectedOrder = useAppSelector(selectCurrentOrder);\n  // const allOrders = useAppSelector(selectOrders);\n  // if(allOrders) allOrders.filter(item => item._id === params.orderId);\n  // const storeIngredients : TIngredient[] = useAppSelector(selectAllIngredientsItems);\n  // const orderData = selectedOrder \n  //                     ? selectedOrder \n  //                     : allOrders[0]\n\n  // if(orderData && Object.keys(orderData).length !== 0) {\n  //     const date = orderData.updatedAt;\n\n  //     //расчет общей стоимости заказа\n  //     let sum = 0;\n  //     orderData.ingredients.forEach((item : string) => storeIngredients.forEach(ingredient => {\n  //         if(ingredient._id === item) sum += ingredient.price;\n  //     }));\n\n  //     //группировка ингредиентов с подсчетом количества одинаковых элементов\n  //     type TGroupedIngredients = {\n  //         [key: string]: number\n  //     }\n  //     const groupedIngredients = orderData.ingredients.reduce((acc : TGroupedIngredients, item : string) => {\n  //         acc[item] = (acc[item] || 0) + 1;\n  //         return acc;\n  //     }, {});\n  //     const groupedIngredientsKeys : string[] | [] = Object.keys(groupedIngredients) || [];\n\n  //     if(!orderData) return <Spinner />;\n  //     return (\n  //         <div>\n  //             <p className={`text text_type_digits-default ${styles.num} mb-10`}>#{orderData.number}</p>\n  //             <h2 className=\"text text_type_main-medium mb-3\">{orderData.name}</h2>\n  //             <OrderStatus status={`${orderData.status}`}/>\n  //             <p className=\"text text_type_main-medium mb-6 mt-15\">Состав:</p>\n  //             <ul className={`${styles.list} mb-16`}>\n  //                 {groupedIngredients && groupedIngredientsKeys.map(ingredient => (\n  //                     <li key={ingredient}>\n  //                         <OrderIngredientsBlock itemID={ingredient} quantity={groupedIngredients[ingredient]}/>\n  //                     </li>\n  //                 ))\n  //                 }\n  //             </ul>\n  //             <div className={`${styles.dateAndTotalPrice}`}>\n  //                 <FormattedDate className=\"text text_type_main-small text_color_inactive\" date={new Date(date)} />\n  //                 <Price price={sum}/>\n  //             </div>\n  //         </div>\n  //     )\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 12\n  }, this);\n  // }\n};\n_c = OrderDetailedInfo;\nvar _c;\n$RefreshReg$(_c, \"OrderDetailedInfo\");","map":{"version":3,"names":["OrderDetailedInfo","_jsxDEV","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/reinaka/Documents/untitled folder/_stellar_/react-burger/src/components/modal/order-detailed-info/order-detailed-info.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useAppSelector } from \"../../../services/hooks/reduxTypes\";\nimport { selectCurrentOrder, selectOrders } from \"../../../services/functions/selectorFunctions\";\nimport { OrderStatus } from \"../../ui-elements/order-status/order-status\";\nimport { FormattedDate } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { Price } from \"../../ui-elements/price/price\";\nimport { TIngredient } from \"../../../services/types/types\";\nimport { selectAllIngredientsItems } from \"../../../services/functions/selectorFunctions\";\nimport { OrderIngredientsBlock } from \"../../ui-elements/order-ingredients-block/order-ingredients-block.module.css/order-ingredients-block\";\nimport styles from './order-detailed-info.module.css';\nimport { Spinner } from \"../../ui-elements/spinner/spinner\";\n\nexport const OrderDetailedInfo = () => {\n    // const params = useParams();\n    // const selectedOrder = useAppSelector(selectCurrentOrder);\n    // const allOrders = useAppSelector(selectOrders);\n    // if(allOrders) allOrders.filter(item => item._id === params.orderId);\n    // const storeIngredients : TIngredient[] = useAppSelector(selectAllIngredientsItems);\n    // const orderData = selectedOrder \n    //                     ? selectedOrder \n    //                     : allOrders[0]\n\n    // if(orderData && Object.keys(orderData).length !== 0) {\n    //     const date = orderData.updatedAt;\n    \n    //     //расчет общей стоимости заказа\n    //     let sum = 0;\n    //     orderData.ingredients.forEach((item : string) => storeIngredients.forEach(ingredient => {\n    //         if(ingredient._id === item) sum += ingredient.price;\n    //     }));\n\n    //     //группировка ингредиентов с подсчетом количества одинаковых элементов\n    //     type TGroupedIngredients = {\n    //         [key: string]: number\n    //     }\n    //     const groupedIngredients = orderData.ingredients.reduce((acc : TGroupedIngredients, item : string) => {\n    //         acc[item] = (acc[item] || 0) + 1;\n    //         return acc;\n    //     }, {});\n    //     const groupedIngredientsKeys : string[] | [] = Object.keys(groupedIngredients) || [];\n\n    //     if(!orderData) return <Spinner />;\n    //     return (\n    //         <div>\n    //             <p className={`text text_type_digits-default ${styles.num} mb-10`}>#{orderData.number}</p>\n    //             <h2 className=\"text text_type_main-medium mb-3\">{orderData.name}</h2>\n    //             <OrderStatus status={`${orderData.status}`}/>\n    //             <p className=\"text text_type_main-medium mb-6 mt-15\">Состав:</p>\n    //             <ul className={`${styles.list} mb-16`}>\n    //                 {groupedIngredients && groupedIngredientsKeys.map(ingredient => (\n    //                     <li key={ingredient}>\n    //                         <OrderIngredientsBlock itemID={ingredient} quantity={groupedIngredients[ingredient]}/>\n    //                     </li>\n    //                 ))\n    //                 }\n    //             </ul>\n    //             <div className={`${styles.dateAndTotalPrice}`}>\n    //                 <FormattedDate className=\"text text_type_main-small text_color_inactive\" date={new Date(date)} />\n    //                 <Price price={sum}/>\n    //             </div>\n    //         </div>\n    //     )\n    return <div></div>\n    // }\n};"],"mappings":";;AAYA,OAAO,MAAMA,iBAAiB,GAAGA,CAAA,KAAM;EACnC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBAAOC,OAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;EAClB;AACJ,CAAC;AAACC,EAAA,GApDWN,iBAAiB;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}