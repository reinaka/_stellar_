{"ast":null,"code":"import { BASE_URL } from \"../../constants/constants\";\nimport { AUTH_FAILED } from \"../actions/auth-actions\";\nexport function checkServerResponse(res) {\n  return res.ok ? res.json() : Promise.reject(res.json());\n}\nfunction checkSuccess(res) {\n  return res && res.success ? res : Promise.reject(`Ответ не success: ${res}`);\n}\nexport async function getServerResponse(endpoint, options) {\n  return fetch(`${BASE_URL}${endpoint}`, options).then(checkServerResponse).then(checkSuccess);\n}\nexport function catchServerResponseError(error, dispatch) {\n  return error.then(res => {\n    dispatch({\n      type: AUTH_FAILED,\n      payload: res.message\n    });\n  });\n}","map":{"version":3,"names":["BASE_URL","AUTH_FAILED","checkServerResponse","res","ok","json","Promise","reject","checkSuccess","success","getServerResponse","endpoint","options","fetch","then","catchServerResponseError","error","dispatch","type","payload","message"],"sources":["/Users/reinaka/Documents/untitled folder/_stellar_/src/services/functions/getServerResponse.ts"],"sourcesContent":["import { BASE_URL } from \"../../constants/constants\";\nimport { AUTH_FAILED } from \"../actions/auth-actions\";\nimport { AppDispatch } from \"../types/thunkTypes\";\n\ntype TRequestOptions = {\n    method : 'GET' | 'POST' | 'PATCH',\n    headers : {},\n    body? : string \n}\n\nexport function checkServerResponse(res : Response) {\n    return res.ok\n    ? res.json()\n    : Promise.reject(res.json())\n}\n\nfunction checkSuccess(res: any) {\n    return (res && res.success)\n    ? res\n    : Promise.reject(`Ответ не success: ${res}`)\n}\n\nexport async function getServerResponse(endpoint : string, options? : TRequestOptions) {\n    return fetch(`${BASE_URL}${endpoint}`, options)\n    .then(checkServerResponse)\n    .then(checkSuccess)\n}\n\nexport function catchServerResponseError(error: Promise<Error>, dispatch : AppDispatch) {\n    return error.then(res => {\n        dispatch({\n            type: AUTH_FAILED,\n            payload: res.message\n        })\n    })\n}"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,2BAA2B;AACpD,SAASC,WAAW,QAAQ,yBAAyB;AASrD,OAAO,SAASC,mBAAmBA,CAACC,GAAc,EAAE;EAChD,OAAOA,GAAG,CAACC,EAAE,GACXD,GAAG,CAACE,IAAI,CAAC,CAAC,GACVC,OAAO,CAACC,MAAM,CAACJ,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;AAChC;AAEA,SAASG,YAAYA,CAACL,GAAQ,EAAE;EAC5B,OAAQA,GAAG,IAAIA,GAAG,CAACM,OAAO,GACxBN,GAAG,GACHG,OAAO,CAACC,MAAM,CAAE,qBAAoBJ,GAAI,EAAC,CAAC;AAChD;AAEA,OAAO,eAAeO,iBAAiBA,CAACC,QAAiB,EAAEC,OAA0B,EAAE;EACnF,OAAOC,KAAK,CAAE,GAAEb,QAAS,GAAEW,QAAS,EAAC,EAAEC,OAAO,CAAC,CAC9CE,IAAI,CAACZ,mBAAmB,CAAC,CACzBY,IAAI,CAACN,YAAY,CAAC;AACvB;AAEA,OAAO,SAASO,wBAAwBA,CAACC,KAAqB,EAAEC,QAAsB,EAAE;EACpF,OAAOD,KAAK,CAACF,IAAI,CAACX,GAAG,IAAI;IACrBc,QAAQ,CAAC;MACLC,IAAI,EAAEjB,WAAW;MACjBkB,OAAO,EAAEhB,GAAG,CAACiB;IACjB,CAAC,CAAC;EACN,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}