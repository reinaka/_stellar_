{"ast":null,"code":"import { WS_BASE_URL } from '../../constants/constants';\nexport const socketMiddleware = wsActions => {\n  return store => {\n    let socket = null;\n    return next => action => {\n      const {\n        dispatch\n      } = store;\n      const {\n        type,\n        payload\n      } = action;\n      const {\n        wsInit,\n        onOpen,\n        onClosed,\n        onError,\n        onMessage,\n        onSendMessage\n      } = wsActions;\n      if (type === wsInit) {\n        console.log(\"init\");\n        socket = new WebSocket(`${WS_BASE_URL}${payload}`);\n      }\n      ;\n      if (socket) {\n        socket.onopen = event => {\n          console.log(\"opened\");\n          dispatch({\n            type: onOpen,\n            payload: event\n          });\n        };\n        socket.onerror = event => {\n          dispatch({\n            type: onError,\n            payload: event\n          });\n        };\n        socket.onmessage = event => {\n          const {\n            data\n          } = event;\n          dispatch({\n            type: onMessage,\n            payload: data\n          });\n        };\n        socket.onclose = event => {\n          dispatch({\n            type: onClosed,\n            payload: event\n          });\n        };\n        if (type === onSendMessage) {\n          const message = action.payload;\n          socket.send(JSON.stringify(message));\n        }\n      }\n      next(action);\n    };\n  };\n};","map":{"version":3,"names":["WS_BASE_URL","socketMiddleware","wsActions","store","socket","next","action","dispatch","type","payload","wsInit","onOpen","onClosed","onError","onMessage","onSendMessage","console","log","WebSocket","onopen","event","onerror","onmessage","data","onclose","message","send","JSON","stringify"],"sources":["/Users/reinaka/Documents/untitled folder/_stellar_/react-burger/src/services/middleware/socketMiddleware.ts"],"sourcesContent":["import type { Middleware, MiddlewareAPI } from 'redux';\nimport { AppDispatch } from '../types/thunkTypes';\nimport { RootState } from '../types/thunkTypes';\nimport { WS_BASE_URL } from '../../constants/constants';\nimport { TWSActions, TSocketActions } from '../actions/socket-actions';\n\nexport const socketMiddleware = (wsActions: TWSActions): Middleware => {\n    return ((store: MiddlewareAPI<AppDispatch, RootState>) => {\n        let socket: WebSocket | null = null;\n\n    return next => (action: TSocketActions) => {\n        const { dispatch } = store;\n        const { type, payload } = action;\n        const { wsInit, onOpen, onClosed, onError, onMessage, onSendMessage } = wsActions;\n\n        if (type === wsInit) {\n            console.log(\"init\");\n            socket = new WebSocket(`${WS_BASE_URL}${payload}`);\n        };\n\n        if (socket) {\n        socket.onopen = event => {\n            console.log(\"opened\")\n            dispatch({ type: onOpen, payload: event });\n        };\n\n        socket.onerror = event => {\n            dispatch({ type: onError, payload: event });\n        };\n\n        socket.onmessage = event => {\n            const { data } = event;\n            dispatch({ type: onMessage, payload: data });\n        };\n        \n        socket.onclose = event => {\n            dispatch({ type: onClosed, payload: event });\n        };\n\n        if (type === onSendMessage) {\n            const message  = action.payload;\n            socket.send(JSON.stringify(message));\n        }\n    }\n\n    next(action);\n    };\n    }) as Middleware;\n}; "],"mappings":"AAGA,SAASA,WAAW,QAAQ,2BAA2B;AAGvD,OAAO,MAAMC,gBAAgB,GAAIC,SAAqB,IAAiB;EACnE,OAASC,KAA4C,IAAK;IACtD,IAAIC,MAAwB,GAAG,IAAI;IAEvC,OAAOC,IAAI,IAAKC,MAAsB,IAAK;MACvC,MAAM;QAAEC;MAAS,CAAC,GAAGJ,KAAK;MAC1B,MAAM;QAAEK,IAAI;QAAEC;MAAQ,CAAC,GAAGH,MAAM;MAChC,MAAM;QAAEI,MAAM;QAAEC,MAAM;QAAEC,QAAQ;QAAEC,OAAO;QAAEC,SAAS;QAAEC;MAAc,CAAC,GAAGb,SAAS;MAEjF,IAAIM,IAAI,KAAKE,MAAM,EAAE;QACjBM,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACnBb,MAAM,GAAG,IAAIc,SAAS,CAAE,GAAElB,WAAY,GAAES,OAAQ,EAAC,CAAC;MACtD;MAAC;MAED,IAAIL,MAAM,EAAE;QACZA,MAAM,CAACe,MAAM,GAAGC,KAAK,IAAI;UACrBJ,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;UACrBV,QAAQ,CAAC;YAAEC,IAAI,EAAEG,MAAM;YAAEF,OAAO,EAAEW;UAAM,CAAC,CAAC;QAC9C,CAAC;QAEDhB,MAAM,CAACiB,OAAO,GAAGD,KAAK,IAAI;UACtBb,QAAQ,CAAC;YAAEC,IAAI,EAAEK,OAAO;YAAEJ,OAAO,EAAEW;UAAM,CAAC,CAAC;QAC/C,CAAC;QAEDhB,MAAM,CAACkB,SAAS,GAAGF,KAAK,IAAI;UACxB,MAAM;YAAEG;UAAK,CAAC,GAAGH,KAAK;UACtBb,QAAQ,CAAC;YAAEC,IAAI,EAAEM,SAAS;YAAEL,OAAO,EAAEc;UAAK,CAAC,CAAC;QAChD,CAAC;QAEDnB,MAAM,CAACoB,OAAO,GAAGJ,KAAK,IAAI;UACtBb,QAAQ,CAAC;YAAEC,IAAI,EAAEI,QAAQ;YAAEH,OAAO,EAAEW;UAAM,CAAC,CAAC;QAChD,CAAC;QAED,IAAIZ,IAAI,KAAKO,aAAa,EAAE;UACxB,MAAMU,OAAO,GAAInB,MAAM,CAACG,OAAO;UAC/BL,MAAM,CAACsB,IAAI,CAACC,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,CAAC;QACxC;MACJ;MAEApB,IAAI,CAACC,MAAM,CAAC;IACZ,CAAC;EACD,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}