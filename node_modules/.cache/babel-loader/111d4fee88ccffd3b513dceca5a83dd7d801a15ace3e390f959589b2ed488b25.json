{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nexport function useFormAndValidation(inputValues) {\n  _s();\n  const [values, setValues] = useState(inputValues);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n  const resetForm = useCallback(() => {\n    setValues(inputValues);\n  }, [setValues, inputValues]);\n  return {\n    values,\n    handleChange,\n    resetForm,\n    setValues\n  };\n}\n_s(useFormAndValidation, \"JxJuut0nF/SsdvvL1HV+JH3PM64=\");","map":{"version":3,"names":["useState","useCallback","useFormAndValidation","inputValues","_s","values","setValues","handleChange","e","name","value","target","resetForm"],"sources":["/Users/reinaka/Documents/untitled folder/_stellar_/src/services/hooks/use-form-validation.ts"],"sourcesContent":["import {useState, useCallback} from 'react';\n\nexport function useFormAndValidation<T>(inputValues: T) {\n    const [ values, setValues ] = useState<T>(inputValues);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const {name, value} = e.target\n        setValues({...values, [name]: value });\n    };\n\n    const resetForm = useCallback(() => {\n        setValues(inputValues);\n    }, [setValues, inputValues]);\n\n    return { values, handleChange, resetForm, setValues };\n}"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,WAAW,QAAO,OAAO;AAE3C,OAAO,SAASC,oBAAoBA,CAAIC,WAAc,EAAE;EAAAC,EAAA;EACpD,MAAM,CAAEC,MAAM,EAAEC,SAAS,CAAE,GAAGN,QAAQ,CAAIG,WAAW,CAAC;EAEtD,MAAMI,YAAY,GAAIC,CAAsC,IAAK;IAC7D,MAAM;MAACC,IAAI;MAAEC;IAAK,CAAC,GAAGF,CAAC,CAACG,MAAM;IAC9BL,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAE,CAACI,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC1C,CAAC;EAED,MAAME,SAAS,GAAGX,WAAW,CAAC,MAAM;IAChCK,SAAS,CAACH,WAAW,CAAC;EAC1B,CAAC,EAAE,CAACG,SAAS,EAAEH,WAAW,CAAC,CAAC;EAE5B,OAAO;IAAEE,MAAM;IAAEE,YAAY;IAAEK,SAAS;IAAEN;EAAU,CAAC;AACzD;AAACF,EAAA,CAbeF,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}