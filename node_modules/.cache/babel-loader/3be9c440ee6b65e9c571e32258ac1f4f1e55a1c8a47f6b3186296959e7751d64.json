{"ast":null,"code":"var _jsxFileName = \"/Users/reinaka/Documents/untitled folder/_stellar_/react-burger/src/pages/registration-page/registration-page.tsx\",\n  _s = $RefreshSig$();\nimport { EmailInput, PasswordInput, Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { RegistrationWrapper } from '../../components/ui-elements/form-registration-wrapper/form-registration-wrapper';\nimport { useCallback, useState, useEffect } from 'react';\nimport { getAuth } from '../../services/actions/auth-actions';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { selectLoginSuccess } from '../../services/functions/selectorFunctions';\nimport { useModal } from '../../services/hooks/use-modal';\nimport ErrorModal from '../../components/modal/error-modal/error-modal';\nimport { selectAuthError } from '../../services/functions/selectorFunctions';\nimport { BASE_URL, REGISTRATION_ENDPOINT } from '../../constants/constants';\nimport RegistrationForm from '../../components/ui-elements/form-registration/form-registration';\nimport RegisterFormText from '../../components/ui-elements/register-form-text/register-form-text';\nimport { useFormAndValidation } from '../../services/hooks/use-form-validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RegistrationPage() {\n  _s();\n  var _location$state, _location$state$locat;\n  const dispatch = useDispatch();\n  const loggedIn = useSelector(selectLoginSuccess);\n  const location = useLocation();\n  const {\n    values,\n    handleChange\n  } = useFormAndValidation({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const dataToPost = {\n    \"email\": values.email,\n    \"password\": values.password,\n    \"name\": values.name\n  };\n  const handleRegistration = useCallback(data => {\n    dispatch(getAuth(REGISTRATION_ENDPOINT, data));\n  }, [dispatch]);\n  const authError = useSelector(selectAuthError);\n  const [errorText, setErrorText] = useState();\n  const [isModalVisible, openModal, closeModal] = useModal();\n  useEffect(() => {\n    if (authError) {\n      if (authError === \"User already exists\") {\n        setErrorText(\"Такой пользователь уже зарегистрирован\");\n        openModal();\n      }\n    }\n  }, [authError, openModal]);\n  return loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: (location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$locat = _location$state.location) === null || _location$state$locat === void 0 ? void 0 : _location$state$locat.pathname) || \"/\",\n    replace: true,\n    state: {\n      location\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(RegistrationWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(RegistrationForm, {\n      title: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\",\n      onSubmit: e => {\n        e.preventDefault();\n        handleRegistration(dataToPost);\n      },\n      action: `${BASE_URL}${REGISTRATION_ENDPOINT}`,\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        extraClass: \"mb-6\",\n        value: (values === null || values === void 0 ? void 0 : values.name) || \"\",\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        name: 'name',\n        onChange: e => handleChange(e),\n        icon: \"EditIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EmailInput, {\n        extraClass: \"mb-6\",\n        value: (values === null || values === void 0 ? void 0 : values.email) || \"\",\n        name: 'email',\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n        value: (values === null || values === void 0 ? void 0 : values.password) || \"\",\n        name: \"password\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        extraClass: \"mb-20 mt-6\",\n        htmlType: \"submit\",\n        children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RegisterFormText, {\n      linkText: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n      linkAddress: \"/login\",\n      children: \"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), authError && isModalVisible && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      message: errorText,\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(RegistrationPage, \"j4nrIoIDv69DGNCJWI+Mug1yEqA=\", true, function () {\n  return [useLocation, useFormAndValidation, useModal];\n});\n_c = RegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["EmailInput","PasswordInput","Input","Button","RegistrationWrapper","useCallback","useState","useEffect","getAuth","Navigate","useLocation","selectLoginSuccess","useModal","ErrorModal","selectAuthError","BASE_URL","REGISTRATION_ENDPOINT","RegistrationForm","RegisterFormText","useFormAndValidation","jsxDEV","_jsxDEV","RegistrationPage","_s","_location$state","_location$state$locat","dispatch","useDispatch","loggedIn","useSelector","location","values","handleChange","name","email","password","dataToPost","handleRegistration","data","authError","errorText","setErrorText","isModalVisible","openModal","closeModal","to","state","pathname","replace","fileName","_jsxFileName","lineNumber","columnNumber","children","title","onSubmit","e","preventDefault","action","method","extraClass","value","placeholder","onChange","icon","htmlType","linkText","linkAddress","message","_c","$RefreshReg$"],"sources":["/Users/reinaka/Documents/untitled folder/_stellar_/react-burger/src/pages/registration-page/registration-page.tsx"],"sourcesContent":["import { EmailInput, PasswordInput, Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { RegistrationWrapper } from '../../components/ui-elements/form-registration-wrapper/form-registration-wrapper';\nimport { useCallback, useState, useEffect } from 'react';\nimport { getAuth } from '../../services/actions/auth-actions';\nimport { useAppSelector } from '../../services/hooks/reduxTypes';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { selectLoginSuccess } from '../../services/functions/selectorFunctions';\nimport { useModal } from '../../services/hooks/use-modal';\nimport ErrorModal from '../../components/modal/error-modal/error-modal';\nimport { selectAuthError } from '../../services/functions/selectorFunctions';\nimport { BASE_URL, REGISTRATION_ENDPOINT } from '../../constants/constants';\nimport RegistrationForm from '../../components/ui-elements/form-registration/form-registration';\nimport RegisterFormText from '../../components/ui-elements/register-form-text/register-form-text';\nimport { useFormAndValidation } from '../../services/hooks/use-form-validation';\n\ntype FormStateType = {\n    name : string,\n    email : string,\n    password : string,\n};\n\nexport function RegistrationPage () {\n    const dispatch = useDispatch() as any;\n    const loggedIn = useSelector(selectLoginSuccess);\n    const location = useLocation();\n    \n    const {values, handleChange} = useFormAndValidation<FormStateType>({\n        name : \"\",\n        email : \"\",\n        password : \"\",\n    });\n\n    const dataToPost = {\n        \"email\": values.email,\n        \"password\": values.password,\n        \"name\":values.name,\n    }\n\n    const handleRegistration = useCallback(\n        (data: {}) => {\n            dispatch(getAuth(REGISTRATION_ENDPOINT, data));\n    },[dispatch]);\n\n    const authError = useSelector(selectAuthError);\n    const [errorText, setErrorText] = useState<string>();\n    const [isModalVisible, openModal, closeModal] = useModal();\n\n    useEffect(() => {\n        if(authError) {\n            if(authError === \"User already exists\") {\n                setErrorText(\"Такой пользователь уже зарегистрирован\");\n                openModal();\n            }\n        }\n    }, [authError, openModal])\n\n    return loggedIn\n    ? <Navigate to={location?.state?.location?.pathname || \"/\"} replace={true} state={{location}}/>\n    : (\n        <RegistrationWrapper>\n            <RegistrationForm  \n                title=\"Регистрация\" \n                onSubmit={(e) => {e.preventDefault(); handleRegistration(dataToPost)}}\n                action={`${BASE_URL}${REGISTRATION_ENDPOINT}`}\n                method=\"POST\"\n        >\n            <Input \n                extraClass=\"mb-6\" \n                value={values?.name || \"\"} \n                placeholder=\"Имя\" \n                name={'name'} \n                onChange={(e) => handleChange(e)}\n                icon=\"EditIcon\"\n            />\n            <EmailInput \n                extraClass=\"mb-6\" \n                value={values?.email || \"\"} \n                name={'email'} \n                onChange={(e) => handleChange(e)}\n            />\n            <PasswordInput \n                value={values?.password || \"\"} \n                name=\"password\" \n                onChange={(e) => handleChange(e)}\n            />\n            <Button \n                extraClass=\"mb-20 mt-6\" \n                htmlType=\"submit\" \n            >Зарегистрироваться</Button>\n            </RegistrationForm>\n            <RegisterFormText linkText=\"Войти\" linkAddress=\"/login\">Уже зарегистрированы?</RegisterFormText>\n            {authError && isModalVisible && <ErrorModal message={errorText} closeModal={closeModal}/>}\n        </RegistrationWrapper>\n    )\n}\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,aAAa,EAAEC,KAAK,EAAEC,MAAM,QAAQ,oDAAoD;AAC7G,SAASC,mBAAmB,QAAQ,kFAAkF;AACtH,SAASC,WAAW,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACxD,SAASC,OAAO,QAAQ,qCAAqC;AAE7D,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,kBAAkB,QAAQ,4CAA4C;AAC/E,SAASC,QAAQ,QAAQ,gCAAgC;AACzD,OAAOC,UAAU,MAAM,gDAAgD;AACvE,SAASC,eAAe,QAAQ,4CAA4C;AAC5E,SAASC,QAAQ,EAAEC,qBAAqB,QAAQ,2BAA2B;AAC3E,OAAOC,gBAAgB,MAAM,kEAAkE;AAC/F,OAAOC,gBAAgB,MAAM,oEAAoE;AACjG,SAASC,oBAAoB,QAAQ,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQhF,OAAO,SAASC,gBAAgBA,CAAA,EAAI;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,qBAAA;EAChC,MAAMC,QAAQ,GAAGC,WAAW,CAAC,CAAQ;EACrC,MAAMC,QAAQ,GAAGC,WAAW,CAAClB,kBAAkB,CAAC;EAChD,MAAMmB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAE9B,MAAM;IAACqB,MAAM;IAAEC;EAAY,CAAC,GAAGb,oBAAoB,CAAgB;IAC/Dc,IAAI,EAAG,EAAE;IACTC,KAAK,EAAG,EAAE;IACVC,QAAQ,EAAG;EACf,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAG;IACf,OAAO,EAAEL,MAAM,CAACG,KAAK;IACrB,UAAU,EAAEH,MAAM,CAACI,QAAQ;IAC3B,MAAM,EAACJ,MAAM,CAACE;EAClB,CAAC;EAED,MAAMI,kBAAkB,GAAGhC,WAAW,CACjCiC,IAAQ,IAAK;IACVZ,QAAQ,CAAClB,OAAO,CAACQ,qBAAqB,EAAEsB,IAAI,CAAC,CAAC;EACtD,CAAC,EAAC,CAACZ,QAAQ,CAAC,CAAC;EAEb,MAAMa,SAAS,GAAGV,WAAW,CAACf,eAAe,CAAC;EAC9C,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAS,CAAC;EACpD,MAAM,CAACoC,cAAc,EAAEC,SAAS,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAC,CAAC;EAE1DL,SAAS,CAAC,MAAM;IACZ,IAAGgC,SAAS,EAAE;MACV,IAAGA,SAAS,KAAK,qBAAqB,EAAE;QACpCE,YAAY,CAAC,wCAAwC,CAAC;QACtDE,SAAS,CAAC,CAAC;MACf;IACJ;EACJ,CAAC,EAAE,CAACJ,SAAS,EAAEI,SAAS,CAAC,CAAC;EAE1B,OAAOf,QAAQ,gBACbP,OAAA,CAACZ,QAAQ;IAACoC,EAAE,EAAE,CAAAf,QAAQ,aAARA,QAAQ,wBAAAN,eAAA,GAARM,QAAQ,CAAEgB,KAAK,cAAAtB,eAAA,wBAAAC,qBAAA,GAAfD,eAAA,CAAiBM,QAAQ,cAAAL,qBAAA,uBAAzBA,qBAAA,CAA2BsB,QAAQ,KAAI,GAAI;IAACC,OAAO,EAAE,IAAK;IAACF,KAAK,EAAE;MAAChB;IAAQ;EAAE;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,gBAE3F/B,OAAA,CAACjB,mBAAmB;IAAAiD,QAAA,gBAChBhC,OAAA,CAACJ,gBAAgB;MACbqC,KAAK,EAAC,oEAAa;MACnBC,QAAQ,EAAGC,CAAC,IAAK;QAACA,CAAC,CAACC,cAAc,CAAC,CAAC;QAAEpB,kBAAkB,CAACD,UAAU,CAAC;MAAA,CAAE;MACtEsB,MAAM,EAAG,GAAE3C,QAAS,GAAEC,qBAAsB,EAAE;MAC9C2C,MAAM,EAAC,MAAM;MAAAN,QAAA,gBAEjBhC,OAAA,CAACnB,KAAK;QACF0D,UAAU,EAAC,MAAM;QACjBC,KAAK,EAAE,CAAA9B,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,IAAI,KAAI,EAAG;QAC1B6B,WAAW,EAAC,oBAAK;QACjB7B,IAAI,EAAE,MAAO;QACb8B,QAAQ,EAAGP,CAAC,IAAKxB,YAAY,CAACwB,CAAC,CAAE;QACjCQ,IAAI,EAAC;MAAU;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACF/B,OAAA,CAACrB,UAAU;QACP4D,UAAU,EAAC,MAAM;QACjBC,KAAK,EAAE,CAAA9B,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,KAAK,KAAI,EAAG;QAC3BD,IAAI,EAAE,OAAQ;QACd8B,QAAQ,EAAGP,CAAC,IAAKxB,YAAY,CAACwB,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACF/B,OAAA,CAACpB,aAAa;QACV4D,KAAK,EAAE,CAAA9B,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,QAAQ,KAAI,EAAG;QAC9BF,IAAI,EAAC,UAAU;QACf8B,QAAQ,EAAGP,CAAC,IAAKxB,YAAY,CAACwB,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACF/B,OAAA,CAAClB,MAAM;QACHyD,UAAU,EAAC,YAAY;QACvBK,QAAQ,EAAC,QAAQ;QAAAZ,QAAA,EACpB;MAAkB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACnB/B,OAAA,CAACH,gBAAgB;MAACgD,QAAQ,EAAC,gCAAO;MAACC,WAAW,EAAC,QAAQ;MAAAd,QAAA,EAAC;IAAqB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAAC,EAC/Fb,SAAS,IAAIG,cAAc,iBAAIrB,OAAA,CAACR,UAAU;MAACuD,OAAO,EAAE5B,SAAU;MAACI,UAAU,EAAEA;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CACxB;AACL;AAAC7B,EAAA,CAzEeD,gBAAgB;EAAA,QAGXZ,WAAW,EAEGS,oBAAoB,EAmBHP,QAAQ;AAAA;AAAAyD,EAAA,GAxB5C/C,gBAAgB;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}