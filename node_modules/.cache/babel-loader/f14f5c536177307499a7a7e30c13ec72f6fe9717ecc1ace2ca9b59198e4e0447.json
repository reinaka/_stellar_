{"ast":null,"code":"export const WS_CONNECTION_START = 'WS_CONNECTION_START';\nexport const WS_CONNECTION_SUCCESS = 'WS_CONNECTION_SUCCESS';\nexport const WS_CONNECTION_ERROR = 'WS_CONNECTION_ERROR';\nexport const WS_GET_MESSAGE = 'WS_GET_MESSAGE';\nexport const WS_SEND_MESSAGE = 'WS_SEND_MESSAGE';\nexport const WS_CONNECTION_CLOSED = 'WS_CONNECTION_CLOSED';\nexport const WS_CONNECTION_START_USER = 'WS_CONNECTION_START_USER';\nexport const socketActions = {\n  wsInit: WS_CONNECTION_START,\n  onOpen: WS_CONNECTION_SUCCESS,\n  onClosed: WS_CONNECTION_CLOSED,\n  onError: WS_CONNECTION_ERROR,\n  onMessage: WS_GET_MESSAGE,\n  onSendMessage: WS_SEND_MESSAGE\n};","map":{"version":3,"names":["WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_GET_MESSAGE","WS_SEND_MESSAGE","WS_CONNECTION_CLOSED","WS_CONNECTION_START_USER","socketActions","wsInit","onOpen","onClosed","onError","onMessage","onSendMessage"],"sources":["/Users/reinaka/Documents/untitled folder/_stellar_/react-burger/src/services/actions/socket-actions.ts"],"sourcesContent":["export const WS_CONNECTION_START : 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\nexport const WS_CONNECTION_SUCCESS : 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\nexport const WS_CONNECTION_ERROR : 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\nexport const WS_GET_MESSAGE : 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\nexport const WS_SEND_MESSAGE : 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\nexport const WS_CONNECTION_CLOSED : 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\nexport const WS_CONNECTION_START_USER : 'WS_CONNECTION_START_USER' = 'WS_CONNECTION_START_USER';\n\nexport interface wsConnectionStart {\n    readonly type : typeof WS_CONNECTION_START,\n    payload: {\n        wsBaseUrl : string,\n        endpoint : string\n    }\n}\n\nexport interface wsConnectionSuccess {\n    readonly type : typeof WS_CONNECTION_SUCCESS,\n    payload : Event\n}\n\nexport interface wsConnectionError {\n    readonly type : typeof WS_CONNECTION_ERROR,\n    payload : Event\n}\n\nexport interface wsGetMessage {\n    readonly type : typeof WS_GET_MESSAGE,\n    payload : string\n}\n\nexport interface wsSendMessage {\n    readonly type : typeof WS_SEND_MESSAGE,\n    payload: {}\n}\n\nexport interface wsConnectionClosed {\n    readonly type : typeof WS_CONNECTION_CLOSED,\n    payload : Event\n}\n\nexport type TWSActions = {\n    wsInit:     typeof WS_CONNECTION_START,\n    onOpen:     typeof WS_CONNECTION_SUCCESS,\n    onClosed:   typeof WS_CONNECTION_CLOSED,\n    onError:    typeof WS_CONNECTION_ERROR,\n    onMessage:  typeof WS_GET_MESSAGE,\n    onSendMessage : typeof WS_SEND_MESSAGE\n};\n\nexport const socketActions = {\n    wsInit: WS_CONNECTION_START,\n    onOpen: WS_CONNECTION_SUCCESS,\n    onClosed: WS_CONNECTION_CLOSED,\n    onError:  WS_CONNECTION_ERROR,\n    onMessage: WS_GET_MESSAGE,\n    onSendMessage : WS_SEND_MESSAGE\n}\n\nexport type TSocketActions = wsConnectionStart \n                            | wsConnectionSuccess \n                            | wsConnectionError \n                            | wsGetMessage \n                            | wsSendMessage \n                            | wsConnectionClosed;\n\n"],"mappings":"AAAA,OAAO,MAAMA,mBAA2C,GAAG,qBAAqB;AAChF,OAAO,MAAMC,qBAA+C,GAAG,uBAAuB;AACtF,OAAO,MAAMC,mBAA2C,GAAG,qBAAqB;AAChF,OAAO,MAAMC,cAAiC,GAAG,gBAAgB;AACjE,OAAO,MAAMC,eAAmC,GAAG,iBAAiB;AACpE,OAAO,MAAMC,oBAA6C,GAAG,sBAAsB;AACnF,OAAO,MAAMC,wBAAqD,GAAG,0BAA0B;AA4C/F,OAAO,MAAMC,aAAa,GAAG;EACzBC,MAAM,EAAER,mBAAmB;EAC3BS,MAAM,EAAER,qBAAqB;EAC7BS,QAAQ,EAAEL,oBAAoB;EAC9BM,OAAO,EAAGT,mBAAmB;EAC7BU,SAAS,EAAET,cAAc;EACzBU,aAAa,EAAGT;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}